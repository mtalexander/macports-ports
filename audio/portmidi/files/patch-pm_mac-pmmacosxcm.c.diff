Fix timing on non-Intel systems.
https://github.com/PortMidi/portmidi/issues/25
Includes relevant parts of:
https://github.com/PortMidi/portmidi/commit/052e49bf305fc2016ca6f856397e742c1c7d0e61
--- pm_mac/pmmacosxcm.c.orig	2022-02-21 19:54:37.000000000 -0600
+++ pm_mac/pmmacosxcm.c	2022-05-23 07:38:09.000000000 -0500
@@ -731,7 +731,7 @@
     if (info->packet != NULL) {
         /* out of space, send the buffer and start refilling it */
         /* update min_next_time each flush to support rate limit */
-        UInt64 now =  AudioConvertHostTimeToNanos(AudioGetCurrentHostTime());
+        UInt64 now = AudioGetCurrentHostTime();
         if (now > info->min_next_time) 
             info->min_next_time = now;
         if (info->is_virtual) {
@@ -818,7 +817,7 @@
      * latency is zero. Both mean no timing and send immediately.
      */
     if (when == 0 || midi->latency == 0) {
-        timestamp = AudioConvertNanosToHostTime(AudioGetCurrentHostTime());
+        timestamp = AudioGetCurrentHostTime();
     } else {  /* translate PortMidi time + latency to CoreMIDI time */
         timestamp = ((UInt64) (when + midi->latency) * (UInt64) 1000000) +
                     info->delta;
@@ -867,7 +866,7 @@
               (MIDITimeStamp) AudioConvertNanosToHostTime(when_ns);
     UInt64 now; /* only make system time call when writing a virtual port */
     if (info->is_virtual && info->sysex_timestamp <
-        (now =  AudioConvertHostTimeToNanos(AudioGetCurrentHostTime()))) {
+        (now = AudioGetCurrentHostTime())) {
         info->sysex_timestamp = now;
     }
 
