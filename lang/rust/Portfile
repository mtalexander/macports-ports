# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           legacysupport 1.1

name                rust
version             1.51.0
revision            0
categories          lang devel
platforms           darwin
supported_archs     x86_64 arm64
license             {MIT Apache-2} BSD zlib NCSA Permissive
maintainers         {g5pw @g5pw} \
                    {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

description         A safe, concurrent, practical language

long_description    Rust is a curly-brace, block-structured expression \
                    language. It visually resembles the C language \
                    family, but differs significantly in syntactic and \
                    semantic details. Its design is oriented toward \
                    concerns of \"programming in the large\", that is, of \
                    creating and maintaining boundaries -- both abstract \
                    and operational -- that preserve large-system \
                    integrity, availability and concurrency.

homepage            https://www.rust-lang.org

# Get from src/stage0.txt
# Rust stable 1.x usually requires `set rustc_version 1.(x-1)`
set rustc_version   1.50.0

# can use cmake or cmake-devel; default to cmake.
depends_build       bin:git:git \
                    path:bin/cmake:cmake \
                    port:cctools \
                    port:python39 \
                    port:openssl \
                    port:pkgconfig \
                    port:ninja \
                    port:gmake

depends_lib         port:libffi \
                    path:lib/libssl.dylib:openssl

set arch ${configure.build_arch}
if {${configure.build_arch} eq "arm64"} {
    set arch "aarch64"
}

master_sites        https://static.rust-lang.org/dist

distname            ${name}c-${version}-src

distfiles-append    rust-std-${rustc_version}-${arch}-apple-${os.platform}${extract.suffix} \
                    rustc-${rustc_version}-${arch}-apple-${os.platform}${extract.suffix} \
                    cargo-${rustc_version}-${arch}-apple-${os.platform}${extract.suffix}

checksums           ${distname}${extract.suffix} \
                    rmd160  86012fa02e52e4a06e5c76aaa482face78b38ef5 \
                    sha256  7a6b9bafc8b3d81bbc566e7c0d1f17c9f499fd22b95142f7ea3a8e4d1f9eb847 \
                    size    160954811

checksums-append    rust-std-${rustc_version}-x86_64-apple-${os.platform}${extract.suffix} \
                    rmd160  2234575725d792e24fe53e0fbae1c786a31e55d0 \
                    sha256  a291354e78e8147b22e92c817a0dfee8d3342e07bfafa73a2904a1c99d22c5b8 \
                    size    40793121 \
                    rustc-${rustc_version}-x86_64-apple-${os.platform}${extract.suffix} \
                    rmd160  a823d7becd0341ced56663056626ee211096201c \
                    sha256  3637ee8d8bc0f8e922b1f9ec7b6fc00b6efcceae97c337d205a3bc472be7b936 \
                    size    97361498 \
                    cargo-${rustc_version}-x86_64-apple-${os.platform}${extract.suffix} \
                    rmd160  1f821ec26255f891e403ced7278a281b294c80ff \
                    sha256  45640bb1cef40f25ecb4bd2a3bb34fdf884c418e625d4f9c9595d2aca84fad78 \
                    size    6412639 \
                    rust-std-${rustc_version}-aarch64-apple-${os.platform}${extract.suffix} \
                    rmd160  26bf61d3106d1ef827707aafd9348d3475b20679 \
                    sha256  8a1cda91afd3a732d3737b6f933b0b6065949dd8fbc820245a7e2a97ae9a7711 \
                    size    28059579 \
                    rustc-${rustc_version}-aarch64-apple-${os.platform}${extract.suffix} \
                    rmd160  bc5c28821124b8a2ba09312730f91e75d113193c \
                    sha256  3abc090591fb7fd0a292eeff4cc6a029841d39b0a768eaf1f0b9e4e06cba8ed7 \
                    size    87219407 \
                    cargo-${rustc_version}-aarch64-apple-${os.platform}${extract.suffix} \
                    rmd160  de7cb695c1ebc5e7483ecf7d353d67dba351432a \
                    sha256  19d526ef3518fb0322f809deddbd4208a27d08efa41d2188348f1be8d3bcfe5e \
                    size    5820420

if {${os.platform} eq "darwin" && ${os.major} < 14} {
    known_fail yes
    pre-fetch {
        ui_error "${name} is only supported on macOS 10.10 or later."
        return -code error "unsupported platform version"
    }
}

set rust_platform       ${arch}-apple-${os.platform}
set rust_root           ${worksrcpath}/build/stage0-${arch}

post-extract {
    file mkdir ${rust_root}
    system "cp -r ${workpath}/rust-std-${rustc_version}-${rust_platform}/rust-std-${rust_platform}/* ${rust_root}"
    system "cp -r ${workpath}/rustc-${rustc_version}-${rust_platform}/rustc/* ${rust_root}"
    system "cp -r ${workpath}/cargo-${rustc_version}-${rust_platform}/cargo/* ${rust_root}"
}

# Rust claims to only need c++14 but uses some c++17 features relating to std::unique_ptr
compiler.cxx_standard   2017

configure.args          --enable-vendor \
                        --default-linker=${configure.cc} \
                        --disable-codegen-tests \
                        --disable-docs \
                        --release-channel=stable \
                        --build=${rust_platform} \
                        --local-rust-root=${rust_root} \
                        --set=target.${rust_platform}.cc=${configure.cc} \
                        --set=target.${rust_platform}.cxx=${configure.cxx} \
                        --set=target.${rust_platform}.linker=${configure.cc} \
                        --enable-extended \
                        --tools=rustfmt,clippy,rls

post-configure {
    # the bootstrap call to rustc uses cc for the linker
    # place config file in the HOME directory
    # see https://trac.macports.org/wiki/UsingTheRightCompiler
    xinstall -d -m 0755 ${workpath}/.home/.cargo
    set config [open ${workpath}/.home/.cargo/config w]

    puts ${config} "\[target.${rust_platform}\]"
    puts ${config} "linker = \"${configure.cc}\""

    close ${config}
}

build.args          VERBOSE=1 BOOTSTRAP_ARGS="-v -j${build.jobs}"
build.env-append    OPENSSL_DIR=${prefix}

test.run            yes
test.target         check
test.args           VERBOSE=1

destroot.args       VERBOSE=1

if {${subport} eq ${name}} {

    post-destroot {
        delete ${destroot}${prefix}/lib/rustlib/install.log
        delete ${destroot}${prefix}/lib/rustlib/uninstall.sh
        xinstall -d ${destroot}${prefix}/share/${name}
        xinstall -m 644 ${worksrcpath}/src/etc/ctags.rust \
            ${destroot}${prefix}/share/${name}
    }

}

livecheck.type      regex
livecheck.url       https://github.com/rust-lang/rust/tags
livecheck.regex     archive/(\[\\d\\.\]+).zip

subport rust-src {
    # remove dependencies
    depends_build
    depends_lib

    set rust_source_dir ${destroot}${prefix}/lib/rustlib/src/rust

    description     Source code for the rust programming language
    long_description ${description}

    use_configure no

    build {}

    destroot {
        xinstall -d ${rust_source_dir}
        move ${worksrcpath}/src ${rust_source_dir}/src

        # correct the permissions
        system -W ${rust_source_dir} "find . -type d -exec chmod 755 {} \\;"
        system -W ${rust_source_dir} "find . -type f -exec chmod 644 {} \\;"

        # delete the test directories (which for some god awful reason contains binaries)
        system -W ${rust_source_dir} "find . -type d -name test -print0 | xargs -0 rm -rf"
    }
}
