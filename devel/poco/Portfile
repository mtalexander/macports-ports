# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

github.setup        pocoproject poco 1.10.1 poco- -release
categories          devel
maintainers         {gmail.com:vandervelde.ag @arjanvandervelde} openmaintainer
platforms           darwin

license             Boost-1
supported_archs     arm64 i386 x86_64

default_variants    +sqlite

description         POCO C++ Libraries

long_description \
    POCO aims to be for network-centric, cross-platform C++ software development \
    what Apple's Cocoa is for Mac development, or Ruby on Rails is for Web \
    development -- a powerful, yet easy to use platform to build your applications upon.

homepage            https://pocoproject.org
master_sites        ${homepage}/releases/poco-[strsed ${version} {s/[^0-9.].*$//}]/
distname            ${name}-${version}-all

set docdir          ${prefix}/share/doc/${name}

if {${subport} eq ${name}} {
    revision            2
    checksums           rmd160  b3ba1f1cb925b24626ab09a6cb055edf99380464 \
                        sha256  2cde4b50778013ab3b7a522aa59bccaa7e85a8ccfc654a354c4d9611b6ce1758 \
                        size    5313561

    use_bzip2           yes
    
    depends_lib-append  port:expat \
                        path:lib/libssl.dylib:openssl \
                        port:pcre \
                        port:zlib
    
    options omit
    default omit        {Data/MySQL Data/ODBC Data/PostgreSQL Data/SQLite}
    
    compiler.c_standard 1999
    if {${configure.cxx_stdlib} eq "libc++"} {
        set config      Darwin-clang-libc++
        compiler.cxx_standard 2014
    } else {
        set config      Darwin-clang
        compiler.cxx_standard 2003
    }
    
    universal_variant   no
    configure.args      --static --shared --no-samples --unbundled --config=${config}
    
    build.args-append   CC=${configure.cc} \
                        CXX=${configure.cxx} \
                        CPP=${configure.cpp} \
                        POCO_HOST_OSARCH=${configure.build_arch}
    build.env-append    OPENSSL_DIR=${prefix} \
                        OSFLAGS= \
                        POCO_TARGET_OSARCH=${configure.build_arch}
    
    destroot.args-append {*}${build.args}
    destroot.env-append {*}${build.env}

    pre-configure {
        configure.args-append   --omit=[join ${omit} ,]
    }
    
    post-patch {
        reinplace -E "/^CFLAGS +=/s|\$| ${configure.cppflags} ${configure.cflags}|" \
            ${worksrcpath}/build/config/${config}
        reinplace -E "/^CXXFLAGS +=/s|\$| ${configure.cppflags} ${configure.cxxflags}|" \
            ${worksrcpath}/build/config/${config}
        reinplace -E "/^((SH|DY)LIB|LINKFLAGS) +=/s|\$| -L\$(LIBPATH) ${configure.ldflags}|" \
            ${worksrcpath}/build/config/${config}
        reinplace -E "/^SHLIB +=/s|\$| -Wl,-install_name,${prefix}/lib/\$(notdir \$@)|" \
            ${worksrcpath}/build/config/${config}
    }
    
    use_parallel_build  yes
    build.target        poco
    test.run            yes
    
    test {
        proc luniq {list} {
            set x() {}; unset x
            foreach {item} ${list} {
                set x(${item}) ""
            }
            return [array names x]
        }
    
        set file [open ${worksrcpath}/components]
    
        set components {}
        while {[gets ${file} component] != -1} {
            lappend components ${component}
        }
    
        close ${file}
    
        foreach {component} [luniq ${components}] {
            foreach {testrunner} [glob -nocomplain ${worksrcpath}/${component}/testsuite/bin/*/*/testrunner{,d}] {
                catch {system "${testrunner} -all -print"}
            }
        }
    }
    
    post-destroot {
        xinstall -d ${destroot}${docdir}/html
        xinstall -m 0644 -W ${worksrcpath} CHANGELOG CONTRIBUTORS LICENSE NEWS README VERSION \
            ${destroot}${docdir}
        xinstall -m 0644 -W ${worksrcpath}/doc Acknowledgements.html ${destroot}${docdir}/html
        copy ${worksrcpath}/CppUnit/doc ${destroot}${docdir}/html/CppUnit
    }
    
    variant odbc description {Build ODBC backend for Data library} {
        depends_lib-append      lib:libiodbc:libiodbc
        omit-delete             Data/ODBC
    }
    
    variant mysql description {Build MySQL backend for Data library} {
        depends_lib-append      path:bin/mysql_config5:mysql5
        configure.cppflags-append   -I${prefix}/include/mysql5/mysql
        configure.ldflags-append    -L${prefix}/lib/mysql5/mysql
        omit-delete             Data/MySQL
    }
    
    variant sqlite description {Build SQLite backend for Data library} {
        depends_lib-append      port:sqlite3
        omit-delete             Data/SQLite
    }
}

subport ${name}-docs {
    revision            0
    checksums           rmd160  7f8e7036fd2d4ce0ca726c044cebdc751921959a \
                        sha256  f7cf08449cafed511d7d1ee3faeef8696c2d563f77825768798c54bf3e016804 \
                        size    1352421

    license             unknown
    supported_archs     noarch
    description         documentation for POCO
    long_description    This port contains an offline copy of the POCO documentation.
    homepage            ${homepage}/documentation/
    distname            ${distname}-doc

    use_configure       no

    build {}

    destroot {
        xinstall -d ${destroot}${docdir}
        copy ${worksrcpath} ${destroot}${docdir}/html
    }
}

if {${subport} ne ${name}} {
    livecheck.type  none
}
